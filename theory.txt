Anuko Auction Server Network

The goal of this project is to design a simple yet reasonably reliable distributed auction network.

We see the network consisting of the following entity (or node) types:

1) Auction servers.
2) Hubs.
3) Superhubs (or root hubs).


AUCTION SERVER NODE

These are systems that can function individually as auction websites.
In a standalone mode they self-contain an isolated auction site.

Servers can be conected to hubs to increase their exposure to items and users
from other sites.

Auction servers are end nodes in the network.

A standalonge auction server is not connected to any upstream or downstream nodes.

A networked downstream auction server is connected to upstream nodes but does not have any downstream nodes.


HUB NODE

Hubs are used to connect multiple servers together to encourage transactions between sites.
To keep things simple yet reliable, we envision a primary and at least one secondary hub for each downstream server.

The difference between a downstream server and a hub is: a hub has downstream nodes to communicate with.


ROOT HUB NODE

In context of this project, a root hub is simply a node that does not have any upstream nodes.

Any of the node types should function as auction server.


REDUNDANCY

We aim at achieving reasonable reliability of network by having some redundancy in the following way:

- Nodes may use multiple upstream nodes (by configuring them so).
- Nodes that receive a message attempt to update its downstream and upstream nodes.
- Duplicate messages will be processed only once by nodes themselves.
- Undelivered messages be retried a reasonable number of times, then discarded.

This approach will get us reasonable reliability of delivery of messages to each individual auction server.
Redundancy of individual servers is beyond the scope of this project. It should be addressed by webmasters
if they wish to do so.


NODE INITIALIZATION

At startup, any node should contact upstream nodes and tell them about itself.


MESSAGE DELIVERY

User creates an auction on a server or places a bid, this needs to propagated to participating nodes
via messaging.

- Node updates its own state and the database.
- Node attempts to post a message to all upstream and downstream nodes.
- If all retries to a downstream node fail, it is deactivated and excluded from further messages.


MESSAGE PROCESSING

- If a message is a duplicate, it is discarded.
- Node updates its own state and the database.
- Node attempts to post a message to all upstream and downstream nodes.
- If all retries to a downstream node fail, it is deactivated and excluded from further messages.


AUCTION COMPLETION WORKFLOW

This should be done by the server where auction originated.
In other words, the server that sent a winning bid does nothing after auction closure,
unless it "owns" the auction, in which case it does the closure workflow.
