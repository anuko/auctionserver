# Some preliminary ideas on database structure...


# as_currencies contains currencies supported by auction server.
CREATE TABLE as_currencies (
  id         INTEGER,                       # Currency id.
  name       VARCHAR(3)       NOT NULL,     # USD, CAD, NZD, etc.
  PRIMARY KEY (id)
);

# Insert USD as initial currency.
INSERT INTO as_currencies values(1, 'USD');


# as_site contains details about this auction server installation.
CREATE TABLE as_site (
  uuid       CHAR(36)         NOT NULL,     # Random UUID identifying this auction server.
  sitename   VARCHAR(64)      NOT NULL,     # Name for this server.
  uri        VARCHAR(256)                   # URI at which the server is available to users.
);


# as_users contains users registered with this server.
CREATE TABLE as_users (
  uuid       CHAR(36)         NOT NULL,     # Random UUID identifying a specific user.
  login      VARCHAR(32)      NOT NULL,     # User login.
  password   CHAR(32)         NOT NULL,     # Password hash.
  name       VARCHAR(64)      NOT NULL,     # User name.
  PRIMARY KEY (login)
);


# as_local_auctions contains active auctions originated on this server by locally registered users.
# Note that as auctions are closed, they are moved to as_closed_auctions to keep this table small.
CREATE TABLE as_local_auctions (
  uuid                  CHAR(36)     NOT NULL,  # Random UUID of the auction, generated by the site.
  seller_uuid           CHAR(36)     NOT NULL,  # Seller UUID.
  name                  VARCHAR(256) NOT NULL,  # Name of the auction item.
  description           TEXT         NOT NULL,  # Description of the auction item.
  image_uri             VARCHAR(256),           # Image URI.
  created_timestamp     CHAR(19)     NOT NULL,  # Creation timestamp in format like "2016-04-08 15:00:10".
  close_timestamp       CHAR(19)     NOT NULL,  # Close timestamp in format like "2016-04-15 15:00:10".
  currency_id           INTEGER      NOT NULL,  # Currency id.
  reserve_price         NUMERIC(15,2),          # Reserve price of the auction.
  current_price         NUMERIC(15,2),          # Current price of the auction.
  status                INTEGER,                # Status of the auction.
  PRIMARY KEY (uuid)
);


# as_remote_auctions contains active auctions originated on remote servers.
CREATE TABLE as_remote_auctions (
  uuid                  CHAR(36)     NOT NULL,  # Random UUID of the auction, generated by the site.
  site_uuid             CHAR(36)     NOT NULL,  # Originating site UUID.
  seller_uuid           CHAR(36)     NOT NULL,  # Seller UUID.
  name                  VARCHAR(256) NOT NULL,  # Name of the auction item.
  description           TEXT         NOT NULL,  # Description of the auction item.
  image_uri             VARCHAR(256),           # Image URI.
  created_timestamp     CHAR(19)     NOT NULL,  # Creation timestamp in format like "2016-04-08 15:00:10".
  close_timestamp       CHAR(19)     NOT NULL,  # Close timestamp in format like "2016-04-15 15:00:10".
  currency_id           INTEGER      NOT NULL,  # Currency id.
  reserve_price         NUMERIC(15,2),          # Reserve price of the auction.
  current_price         NUMERIC(15,2),          # Current price of the auction.
  status                INTEGER,                # Status of the auction.
  PRIMARY KEY (uuid)
);


# as_closed_auctions contains closed auctions originated on this server.
CREATE TABLE as_closed_auctions (
  uuid                  CHAR(36)     NOT NULL,  # Random UUID of the auction, generated by the site.
  seller_uuid           CHAR(36)     NOT NULL,  # Seller UUID.
  name                  VARCHAR(256) NOT NULL,  # Name of the auction item.
  description           TEXT         NOT NULL,  # Description of the auction item.
  image_uri             VARCHAR(256),           # Image URI.
  created_timestamp     CHAR(19)     NOT NULL,  # Creation timestamp in format like "2016-04-08 15:00:10".
  close_timestamp       CHAR(19)     NOT NULL,  # Close timestamp in format like "2016-04-15 15:00:10".
  currency_id           INTEGER      NOT NULL,  # Currency id.
  reserve_price         NUMERIC(15,2),          # Reserve price of the auction.
  current_price         NUMERIC(15,2),          # Current price of the auction.
  status                INTEGER,                # Status of the auction.
  PRIMARY KEY (uuid)
);


/*
CREATE TABLE as_bids (
  uuid                  CHAR(36)     NOT NULL,   // Random UUID of the bid.
  auction_uuid          CHAR(36)     NOT NULL,   // UUID of the auction from the aaAuctions table.
  max_price             numeric
  user_uuid             CHAR(36)     NOT NULL,   //
  site_name
  created_timestamp     timestamp
  status
);

CREATE TABLE as_closed_bids (
  uuid                  CHAR(36)     NOT NULL,   // Random UUID of the bid.
  auction_uuid          CHAR(36)     NOT NULL,   // UUID of the auction from the aaAuctions table.
  max_price             numeric
  user_uuid             CHAR(36)     NOT NULL,   //
  site_name
  created_timestamp     timestamp
  status
);

CREATE TABLE as_auction_sites (
  uuid                  CHAR(36)     NOT NULL,   // Random UUID of the auction, generated by the site.
  site_name             VARCHAR(64)  NOT NULL,   // Name the originating auction site.
  site_uri              VARCHAR(256) NOT NULL,   // URI of the originating auction site.
  status                INTEGER
);
*/
